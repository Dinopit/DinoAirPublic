version: '3.8'

services:
  # Nginx Load Balancer
  nginx-lb:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: dinoair-nginx-lb
    ports:
      - "80:80"      # Main application access
      - "8080:8080"  # Health check endpoint
    environment:
      - ACTIVE_ENVIRONMENT=${ACTIVE_ENVIRONMENT:-blue}
    volumes:
      - nginx_logs:/var/log/nginx
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - dinoair-blue-green
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/nginx-health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    labels:
      - "service=load-balancer"
      - "role=traffic-management"

  # Monitoring and metrics collection (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: dinoair-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - dinoair-blue-green
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s
    labels:
      - "service=monitoring"

networks:
  dinoair-blue-green:
    driver: bridge
    name: dinoair-blue-green

volumes:
  nginx_logs:
  prometheus_data: