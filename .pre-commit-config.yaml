# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
    -   id: trailing-whitespace
    -   id: end-of-file-fixer
    -   id: check-yaml
    -   id: check-added-large-files
    -   id: check-merge-conflict
    -   id: detect-private-key

-   repo: https://github.com/pre-commit/mirrors-eslint
    rev: v9.32.0
    hooks:
    -   id: eslint
        files: \.[jt]sx?$ # Run on *.js, *.jsx, *.ts, *.tsx
        types: [file]
        args: [--fix] # Attempt to automatically fix issues
        additional_dependencies:
          - eslint-plugin-security@3.0.1

-   repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
    -   id: prettier
        types_or: [javascript, jsx, ts, tsx, json, css, scss, html, yaml, markdown]
        # Prettier will automatically use your project's .prettierrc file

-   repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
    -   id: black
        language_version: python3

-   repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
    -   id: isort
        args: ["--profile", "black"]

-   repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
    -   id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]

-   repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
    -   id: mypy
        additional_dependencies: [types-requests, types-PyYAML]
        args: [--ignore-missing-imports]

-   repo: https://github.com/PyCQA/bandit
    rev: 1.7.10
    hooks:
    -   id: bandit
        args: ["-r", ".", "-f", "json", "-o", "/tmp/bandit-report.json"]
        exclude: ^tests/

-   repo: https://github.com/gitleaks/gitleaks
    rev: v8.18.1
    hooks:
    -   id: gitleaks

-   repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
    -   id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: .*\.lock$|.*\.min\.js$

-   repo: https://github.com/pycqa/safety
    rev: 3.2.11
    hooks:
    -   id: safety
        args: [--short-report, --ignore=70612]

-   repo: https://github.com/alessandrojcm/commitlint-pre-commit-hook
    rev: v9.18.0
    hooks:
    -   id: commitlint
        stages: [commit-msg]
        additional_dependencies: ['@commitlint/config-conventional']


-   repo: local
    hooks:
    -   id: no-commit-env-files
        name: Block .env files
        entry: .env files must not be committed
        language: fail
        files: '\.env$'
        exclude: '\.env\.example$'

    -   id: check-credentials
        name: Check for hardcoded credentials
        entry: bash -c 'if git diff --cached --name-only | xargs grep -E "(password|secret|key|token|credential)\\s*=\\s*[\"\x27][^\"\x27]+" | grep -v -E "(\.env\.example|example|test|spec|mock|fake|dummy|placeholder)"; then echo "Potential hardcoded credentials detected!"; exit 1; fi || exit 0'
        language: system
        pass_filenames: false